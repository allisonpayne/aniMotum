% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grab.R
\name{grab}
\alias{grab}
\title{grab \code{tibble}'s by name from a \code{foieGras} model object}
\usage{
grab(x, what = "fitted", as_sf = FALSE, normalise = FALSE, group = FALSE)
}
\arguments{
\item{x}{a \code{foieGras} \code{ssm_df} or \code{mpm_df} model object}

\item{what}{the tibble to be grabbed; either \code{fitted}, \code{predicted},
\code{rerouted} (\code{ssm_df} only), or \code{data} (single letters can be used).}

\item{as_sf}{logical; if FALSE (default) then return a \code{tibble} with
un-projected longlat coordinates, otherwise return an \verb{sf tibble}. Ignored
if x is an \code{mpm} model object.}

\item{normalise}{logical; if output includes a move persistence estimate,
should \code{g} (the move persistence index) be normalised to have minimum = 0 and
maximum = 1 (default = FALSE). Note, this normalisation is not applied to the
standard errors of the logit-scale move persistence estimates (\code{logit_g},
\code{logit_g.se}).}

\item{group}{logical; should \code{g} be normalised among individuals as a group,
a 'relative g', or to individuals separately to highlight regions of lowest
and highest move persistence along single tracks (default = FALSE).}
}
\value{
a \code{tibble} with all individual \code{tibble}'s appended
}
\description{
\code{grab()} lets you obtain \code{fitted}, \code{predicted}, \code{rerouted} or
\code{data} \code{tibble}'s from a compound \code{tibble} created when fitting to multiple
individual data sets. The specified \code{tibble}'s are appended to a single output
\code{tibble}.
}
\details{
if multiple \code{ssm_df} model objects are present in \code{x}, \code{as_sf = TRUE},
and at least 1 estimated track has a coordinate reference system (\code{crs}) with
longitude centered on 180 (e.g. a track straddling -180,180) then all tracks
will be re-projected to that \code{crs}.
}
\examples{
## generate an ssm fit object
xs <- fit_ssm(sese2, spdf=FALSE, model = "rw", time.step=72, 
control = ssm_control(verbose = 0))

## grab predicted values as an un-projected tibble
preds <- grab(xs, what = "predicted")

}
